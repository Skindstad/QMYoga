@page "/Playlist"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@using QMYoga.Models

<link href="PlaylistStyle.css" rel="stylesheet" />

@foreach (var playlist in playlists)
{
    <div class="split" style="margin-top: 1em;">
        <div class="container">
            <div>
                <p class="section-title">Ny</p>
            </div>
            <div class="row align-items-center">
                
                <div class="col-6 col-md-4 col-lg-3 position-relative image-overlay-container">
                <a href="#">
                    <img src="https://www.ekhartyoga.com/media/image/articles/Laia_Bove_Mermaid-pose.jpg" alt="image" class="img-thumbnail base-image">
                    <img src="https://img.freepik.com/premium-vector/free-vector-padlock-icon-lock-locked_901408-572.jpg" alt="lock" class="img-thumbnail overlay-image">
                </a>
                </div>

                <div class="col">
                    <div class="row">
                        <h1 class="playlist-title">@playlist.Name</h1>
                    </div>
                    <div class="row button-group">
                        <div class="col-6 col-sm-6 col-md-3 mb-2">
                            <button class="btn btn-custom">Nakke</button>
                        </div>
                        <div class="col-6 col-sm-6 col-md-3 mb-2">
                            <button class="btn btn-custom">Yoga</button>
                        </div>
                        <div class="col-6 col-sm-6 col-md-3 mb-2">
                            <button class="btn btn-custom">Kick</button>
                        </div>
                        <div class="col-6 col-sm-6 col-md-3 mb-2">
                            <button class="btn btn-custom">Punch</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Collapsible Content (Text + Carousel) -->
            <div class="row" style="@GetDisplayStyle(playlist.IsVisible)">
                <div class="row">
                <div class="col-md-4 col-sm-0"></div>
                <div class="col-md-8 col-sm-12">
                    <p class="description-text">@playlist.Description</p>
                </div>
                </div>
                <div class="row">
                    <div class="col-12 position-relative">
                        <div class="scroll-carousel d-flex" id="carouselContainer@(playlist.Id)">
                            @foreach (var image in Images)
                            {
                                <a href="#">
                                    <div class="carousel-image">
                                        <img src="@image.Url" alt="@image.Name">
                                    </div>
                                </a>
                            }
                        </div>

                        <!-- Carousel Controls -->
                        <button class="carousel-control-prev" type="button" @onclick="() => ScrollCarousel(-1, playlist.Id)">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" @onclick="() => ScrollCarousel(1, playlist.Id)">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Toggle Button -->
            <div class="text-center mt-4">
                <button class="btn btn-toggle" @onclick="() => ToggleContent(playlist.Id)">Show</button>
            </div>
        </div>
    </div>
}

@code {
    private bool isContentVisible = false;
    private string toggleButtonText = "Show";
    private List<Image> Images = new List<Image>
    {
        new Image { Url = "https://www.ekhartyoga.com/media/image/articles/Laia_Bove_Mermaid-pose.jpg", Name = "Image 1" },
        new Image { Url = "https://eu.manduka.com/cdn/shop/articles/Manduka_1698x.png?v=1640096724", Name = "Image 2" },
        new Image { Url = "https://trinehedegaard.dk/cdn/shop/articles/rolling_pandag_forfra_smil_forside_format.jpg?v=1588597029&width=2048", Name = "Image 3" },
        new Image { Url = "https://yoga-amager.dk/wp-content/uploads/2022/01/IMG-2233-scaled.jpg", Name = "Image 4" },
        new Image { Url = "https://yoga-amager.dk/wp-content/uploads/2022/01/IMG-2233-scaled.jpg", Name = "Image 4" },
        new Image { Url = "https://yoga-amager.dk/wp-content/uploads/2022/01/IMG-2233-scaled.jpg", Name = "Image 4" },
        new Image { Url = "https://yoga-amager.dk/wp-content/uploads/2022/01/IMG-2233-scaled.jpg", Name = "Image 4" },
        new Image { Url = "https://yoga-amager.dk/wp-content/uploads/2022/01/IMG-2233-scaled.jpg", Name = "Image 4" },
        new Image { Url = "https://res.cloudinary.com/peloton-cycle/image/fetch/c_fill,dpr_1.0,w_1024,h_768,x_1033,y_1313/f_auto/q_auto/https://images.ctfassets.net/6ilvqec50fal/4etuYztO7f1eMUnRn8e4Ia/62281f46a148c25651f09b8f8287ad0c/GettyImages-1223389038.jpg", Name = "Image 5" }
        // Add more images as needed
    };

    private List<Models.Playlist> playlists = new List<Models.Playlist>
    {
        new Models.Playlist { Name = "Nakke", Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non dolor elit. Ut congue odio quis facilisis ultrices. Etiam ac magna varius, aliquet elit at, porta lorem. Morbi et tempor libero. Integer mi sapien, commodo nec arcu ut, auctor eleifend massa. Nunc urna nisi, mollis in tortor vel, interdum venenatis elit. Aenean gravida venenatis nisl, ac condimentum quam cursus id. Aliquam sed luctus urna, vel condimentum mi. Integer ipsum est, commodo ac metus vitae, condimentum varius massa. Aenean viverra, lectus vitae rutrum porttitor, eros sem pellentesque nulla, eget lobortis justo est non erat. Quisque ornare sed nisi vel fringilla. Praesent ultrices ipsum justo, sed tristique sem pulvinar quis. Nullam pretium viverra diam. Proin finibus metus nulla, eget vestibulum tortor interdum et. ", Id = 1},
        new Models.Playlist { Name = "Nakke", Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non dolor elit. Ut congue odio quis facilisis ultrices. Etiam ac magna varius, aliquet elit at, porta lorem. Morbi et tempor libero. Integer mi sapien, commodo nec arcu ut, auctor eleifend massa. Nunc urna nisi, mollis in tortor vel, interdum venenatis elit. Aenean gravida venenatis nisl, ac condimentum quam cursus id. Aliquam sed luctus urna, vel condimentum mi. Integer ipsum est, commodo ac metus vitae, condimentum varius massa. Aenean viverra, lectus vitae rutrum porttitor, eros sem pellentesque nulla, eget lobortis justo est non erat. Quisque ornare sed nisi vel fringilla. Praesent ultrices ipsum justo, sed tristique sem pulvinar quis. Nullam pretium viverra diam. Proin finibus metus nulla, eget vestibulum tortor interdum et. ", Id = 2},
        new Models.Playlist { Name = "Nakke", Description = "Lorem ipsum dolor sit amet...", Id = 3},
        new Models.Playlist { Name = "Nakke", Description = "Lorem ipsum dolor sit amet...", Id = 4},
        new Models.Playlist { Name = "Nakke", Description = "Lorem ipsum dolor sit amet...", Id = 5},
    };





    private void ToggleContent(int id)
    {
        var playlist = playlists.FirstOrDefault(s => s.Id == id);
        if (playlist != null)
        {
            playlist.IsVisible = !playlist.IsVisible;
        }
    }

    private string GetDisplayStyle(bool isVisible)
    {
        return isVisible ? "display: block;" : "display: none;";
    }


    private void ScrollCarousel(int direction, int id)
    {
        JSRuntime.InvokeVoidAsync("scrollCarousel", direction, id);
    }
}